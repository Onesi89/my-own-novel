name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Build project
        run: npm run build
        env:
          # Mock environment variables for build test
          NEXT_PUBLIC_SUPABASE_URL: https://example.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: mock-anon-key
          SUPABASE_SERVICE_ROLE_KEY: mock-service-key
          GOOGLE_CLIENT_ID: mock-client-id
          GOOGLE_CLIENT_SECRET: mock-client-secret
          NEXT_PUBLIC_GOOGLE_MAP_KEY: mock-maps-key
          GEMINI_API_KEY: mock-gemini-key
          NEXTAUTH_URL: https://example.com
          NEXTAUTH_SECRET: mock-secret
          STORIES_BASE_PATH: ./stories
          
      - name: Check build output
        run: |
          if [ ! -d ".next" ]; then
            echo "Build failed: .next directory not found"
            exit 1
          fi
          echo "Build successful!"
          
  deployment-ready:
    name: Deployment Ready Check
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Check deployment files
        run: |
          # Check if deployment configuration exists
          if [ ! -f "vercel.json" ]; then
            echo "Warning: vercel.json not found"
          else
            echo "âœ… vercel.json found"
          fi
          
          if [ ! -f ".env.example" ]; then
            echo "Warning: .env.example not found"
          else
            echo "âœ… .env.example found"
          fi
          
          if [ ! -f "DEPLOYMENT.md" ]; then
            echo "Warning: DEPLOYMENT.md not found"
          else
            echo "âœ… DEPLOYMENT.md found"
          fi
          
          echo "Deployment configuration check completed!"
          
      - name: Notify deployment ready
        run: |
          echo "ðŸš€ Project is ready for Vercel deployment!"
          echo "ðŸ“– Follow the guide in DEPLOYMENT.md for deployment steps"